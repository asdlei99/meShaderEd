<?xml version="1.0"?>
<node name="test_matrix" author="mesh">
	<help>Returns the 2D surface point based on the underlying\n
	    	ST parameterization of your object.</help>
	<input>
	  <property name="PT_0" type="point" default="point(0)" space="shader" detail="uniform"/>
	  <property name="PT_1" type="point" default="point &quot;world&quot; (0,1,0)" detail="uniform"/>
	  <property name="axis" type="vector" default="vector (1)" space="camera" detail="uniform"/>
	  <property name="Cl" type="color" default="color(0,1,1)" space="hsv" detail="uniform"/>
		<property name="matrix0" type="matrix" default="0" space="object" detail="uniform">
		<help></help>
		</property>
		<property name="matrix1" type="matrix" default="1" detail="uniform">
		<help></help>
		</property>
		<property name="matrix2" type="matrix" default="matrix (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)" detail="uniform">
		<help></help>
		</property>
		<property name="repeatT" type="float" default="1" detail="uniform">
		<help></help>
		</property>
		<property name="offsetS" type="float" default="0" detail="uniform">
		<help></help>
		</property>
		<property name="offsetT" type="float" default="0" detail="uniform">
		<help></help>
		</property>
		<property name="flipS" type="float" default="0" detail="uniform">
		<help></help>
		</property>
		<property name="flipT" type="float" default="0" detail="uniform">
		<help></help>
		</property>
	</input>
	<output>
		<property name="Q" type="point"/>	
		<property name="dQu" type="vector"/>	
		<property name="dQv" type="vector"/>	
	</output>
	<include><file name="me_manifold.h"/></include>
	<internal>
		
	</internal>
	<code><![CDATA[
		point $(Q);
		vector $(dQu);
		vector $(dQv);
  		    	
  	me_ST( $(angle), $(repeatS), $(repeatT), $(offsetS), $(offsetT), $(flipS), $(flipT), $(Q), $(dQu), $(dQv) );
  	
  ]]>
	</code>
	<preview>
		<shader type="surface">
			<code><![CDATA[
			Ci = color( xcomp($(Q)), ycomp($(Q)), zcomp($(Q)) ); 
			Oi = 1.0;]]>)
			</code>
		</shader>
	</preview>	
</node>