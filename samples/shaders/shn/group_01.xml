<!DOCTYPE group_01>
<node name="group_01" label="NodeGroup" author="mesh" type="nodegroup" format="">
<help>Node group test</help>
<input>
  <property name="Globals" type='link' linked_node="5" linked_param="Globals"/>
</input>
<output/>
<internal/>
<include/>
<nodenet author="meShaderEd" name="group_01">
 <help>Short NodeNetwork description</help>
 <nodes name="group_01_nodes">
  <node version="2.0" format="image" type="node" author="mesh" id="1" parent="" name="imageViewer" label="imageViewer">
   <help>Image viewer with dynamicaly added inputs</help>
   <input>
    <property provider="attribute" default="" subtype="button" type="control" value="" btext="Add" name="add_image" label="Image input">
     <code>
#print ":: Hello from (%s) XML control param code !!!" % self.label
from core.params.imageNodeParam import ImageNodeParam
lastNonremovableParam = node.getInputParamByName ( 'selector' )
lastNonremovableParamIdx = node.inputParams.index ( lastNonremovableParam )
lastParamIdx = len ( node.inputParams ) 
suffixIdx = lastParamIdx - lastNonremovableParamIdx

newParam = ImageNodeParam ()
newParam.setup ( 'image' + str ( suffixIdx ), '', '', '' )
newParam.value = ''
newParam.default = ''
newParam.subtype="file"
newParam.range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg"
newParam.removable = True
node.addInputParam ( newParam )
node.updateNodeParams ()


</code>
    </property>
    <property default="" range="All files=*.*:TIFF=*.tif:PNG=*.png:JPEG=*.jpg" subtype="file" type="image" value="" name="image" label="Image"/>
    <property provider="attribute" default="image" range="Image=image" subtype="selector" type="string" value="image" name="selector" label="Select input"/>
   </input>
   <output/>
   <internal/>
   <include/>
   <control_code><![CDATA[
#print ":: Hello from (%s) XML control_code !!!" % self.label
selectedInput = self.getInputParamByName ( 'selector' ).value
print '* selectedInput = %s' % selectedInput 
self.imageName = self.getInputParamValueByName ( selectedInput )

]]></control_code>
   <event_code>
    <handler name="ParamAdded"><![CDATA[#print ":: Hello from ParamAdded handler" 
#print ":: param.label = %s type = %s" % ( param.label, param.type )
selector = self.getInputParamByName ( 'selector' )
selector.range += ':%s=%s' % ( param.label, param.name ) 

]]></handler>
    <handler name="ParamLabelRenamed"><![CDATA[#print ":: Hello from ParamLabelRenamed handler"  
#print ":: param.label = %s oldName = %s" % ( param.label, oldLabel )
if param.type == 'image' :
  selector = self.getInputParamByName ( 'selector' ) 
  selector.renameItemInRange ( oldLabel, param.label )    

]]></handler>
    <handler name="ParamRemoved"><![CDATA[#print ":: Hello from ParamRemoved handler" 
#print ":: param.label = %s type = %s" % ( param.label, param.type ) 
selector = self.getInputParamByName ( 'selector' ) 
selector.removeItemFromRange ( param.label )    

]]></handler>
   </event_code>
   <offset x="-50" y="-220"/>
  </node>
  <node version="1.0" format="rib" icon="" type="node" author="mesh" id="5" parent="" name="BasicPreview" label="BasicPreview">
   <help>Basic preview RIB with geometry primitive, 2 distant and 1 environment light</help>
   <input>
    <property default="" type="rib" value="" name="Globals" label="Render Options"/>
    <property provider="attribute" default="Sphere" range="Sphere:Teapot:Cylinder:Torus:Plane" subtype="selector" type="string" value="Teapot" name="Primitive" label="Primitive"/>
    <property provider="attribute" default="tiff" range="tiff:framebuffer:it" subtype="selector" type="string" value="tiff" name="DisplayDriver" label="Display Driver"/>
    <property provider="attribute" default="256" type="int" value="256" name="Width" label="Image width"/>
    <property provider="attribute" default="256" type="int" value="256" name="Height" label="Image height"/>
    <property provider="attribute" default="1.250" type="float" value="1.250" name="EnvIntensity" label="EnvLight Intensity"/>
    <property provider="attribute" default="kitchen_LL.hdr.tdl" range="All files=*.*:TEX=*.tex:TDL=*.tdl:TIFF=*.tif" subtype="file" type="string" value="kitchen_LL.hdr.tdl" name="EnvMap" label="Environment Map"/>
    <property provider="attribute" default="0.000 0.000 1.000" type="color" value="0.000 0.000 1.000" name="Color" label="Color"/>
    <property provider="attribute" default="1.000 1.000 1.000" type="color" value="1.000 1.000 1.000" name="Opacity" label="Opacity"/>
    <property provider="attribute" default="0.500" type="float" value="0.500" name="DisplaceBound" label="Displacement Bound"/>
    <property default="Displacement &quot;null&quot;" type="rib" value="Displacement &quot;null&quot;" name="FG_disp" label="Displace Shader"/>
    <property default="Surface &quot;defaultsurface&quot;" type="rib" value="Surface &quot;defaultsurface&quot;" name="FG_surf" label="Surface Shader"/>
    <property default="Surface &quot;liquidchecker&quot;" type="rib" value="Surface &quot;liquidchecker&quot;" name="BG_surf" label="Background Shader"/>
    <property display="0" provider="attribute" default="" type="string" value="&#xa;      Rotate 0 0 1 0&#xa;      AttributeBegin&#xa;        Scale 0.35 0.35 0.35&#xa;        Translate -0.6 -1 0&#xa;        Rotate 120 -1 0 0&#xa;        Rotate 30 0 0 1&#xa;        Geometry &quot;teapot&quot;&#xa;      AttributeEnd&#xa;      " name="PrimitiveCode" label="PrimitiveCode"/>
   </input>
   <output>
    <property default="${OUTPUTNAME}.tif" type="image" value="${OUTPUTNAME}.tif" name="ImageFile" label="ImageFile"/>
   </output>
   <internal/>
   <include/>
   <control_code><![CDATA[
print ":: Hello from %s XML code !!!" % self.label

if self.getInputParamByName ( 'Primitive' ).value == 'Sphere':
  self.getInputParamByName ( 'PrimitiveCode' ).value = "Rotate 60 1 0 0\n Sphere 1.0 -1.0 1.0 360"

if self.getInputParamByName ( 'Primitive' ).value == 'Teapot':
  self.getInputParamByName ( 'PrimitiveCode' ).value = """
      Rotate 0 0 1 0
      AttributeBegin
        Scale 0.35 0.35 0.35
        Translate -0.6 -1 0
        Rotate 120 -1 0 0
        Rotate 30 0 0 1
        Geometry \"teapot\"
      AttributeEnd
      """

if self.getInputParamByName ( 'Primitive' ).value == 'Cylinder':
  self.getInputParamByName ( 'PrimitiveCode' ).value = "Rotate 60 1 0 0\n Cylinder 1 -0.5 0.5 360"

if self.getInputParamByName ( 'Primitive' ).value == 'Torus':
  self.getInputParamByName ( 'PrimitiveCode' ).value = """
  Rotate 0 1 0 0
  Torus 0.7 0.4 0.0 360 360
  """

if self.getInputParamByName ( 'Primitive' ).value == 'Plane':
  self.getInputParamByName ( 'PrimitiveCode' ).value = 'Patch "bilinear" "P" [-1 1 0 1 1 0 -1 -1 0 1 -1 0]'


]]></control_code>
   <code><![CDATA[
  Option "searchpath" "shader" "&:@:.:~:${ShaderSearchPath}:${ProjectSearchPath}:${ProjectSearchShaders}"
  Option "searchpath" "texture" "&:@:.:~:${TextureSearchPath}:${ProjectSearchPath}:${ProjectSearchTextures}"
  Option "searchpath" "archive" "&:@:.:~:${ArchiveSearchPath}:${ProjectSearchPath}"

  $(Globals)


  ### Output image
  Display "$(ImageFile)" "$(DisplayDriver)" "rgba"

  Format $(Width) $(Height) 1.0

  Projection "perspective" "fov" 45
  Translate 0 0 3.0

  Attribute "displacementbound" "float sphere" [$(DisplaceBound)]

  WorldBegin

    ReverseOrientation

    TransformBegin
      Rotate -90 1 0 0
      CoordinateSystem "_environment"
    TransformEnd

    LightSource "distantlight" 1 "intensity" 1.0 "from" [-2 2 -3] "to" [0 0 0]
    LightSource "distantlight" 2 "intensity" 0.4 "from" [6 -3 0] "to" [0 0 0]
    LightSource "meEnvLight" 3  "uniform float Intensity" [$(EnvIntensity)]
                                "uniform string meEnvMap_EnvMap" ["$(EnvMap)"]
                                "uniform string meEnvMap_Space" ["_environment"]

    AttributeBegin



      Color [$(Color)]
      Opacity [$(Opacity)]

      $(FG_disp)
      $(FG_surf)

      $(PrimitiveCode)

    AttributeEnd

    AttributeBegin
      Scale 7 7 7
      Translate 0 0 2
      $(BG_surf)

      Patch "bilinear" "P" [-1 1 0 1 1 0 -1 -1 0 1 -1 0]
    AttributeEnd

  WorldEnd
  ]]></code>
   <offset x="-230" y="-250"/>
  </node>
 </nodes>
 <links>
  <link srcNode_id="5" dstNode_id="1" id="1" srcParam="ImageFile" dstParam="image"/>
 </links>
</nodenet>
</node>
